{"version":3,"file":"component---src-pages-nemo-index-tsx-d4c77add4c20ea52592a.js","mappings":"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","sources":["webpack://voicevox-blog/./src/components/playButton.tsx","webpack://voicevox-blog/./src/components/nemoReadmeModal.tsx","webpack://voicevox-blog/./src/pages/nemo/index.tsx","webpack://voicevox-blog/./src/images/nemo/share-thumbnail.png"],"sourcesContent":["import { faPlay, faStop } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport React, { useEffect, useMemo, useState } from \"react\"\n\nexport default ({\n  url,\n  color,\n  className,\n  name,\n  style,\n}: {\n  url: string\n  name: string\n  color?: string\n} & React.HTMLAttributes<HTMLDivElement>) => {\n  const [audio, setAudio] = useState<HTMLAudioElement | null>(null)\n  const [isPlaying, setIsPlaying] = useState(false)\n  const [isReady, setIsReady] = useState(false)\n\n  useEffect(() => {\n    setAudio(new Audio(url))\n  }, [url])\n\n  const colorAddedStyle = useMemo(\n    () =>\n      !color\n        ? style\n        : {\n            backgroundColor: \"white\",\n            borderColor: color,\n            color: color,\n            ...style,\n          },\n    [color, style]\n  )\n\n  useEffect(() => {\n    if (!audio) return\n    audio.load()\n\n    const onPlayCallback = () => {\n      setIsPlaying(true)\n    }\n    const onPauseCallback = () => {\n      setIsPlaying(false)\n    }\n    const onReady = () => {\n      setIsReady(true)\n    }\n    audio.addEventListener(\"play\", onPlayCallback)\n    audio.addEventListener(\"pause\", onPauseCallback)\n    audio.addEventListener(\"canplaythrough\", onReady)\n    return () => {\n      audio.removeEventListener(\"play\", onPlayCallback)\n      audio.removeEventListener(\"pause\", onPauseCallback)\n      audio.removeEventListener(\"canplaythrough\", onReady)\n    }\n  }, [audio])\n\n  useEffect(() => {\n    return () => {\n      if (!audio) return\n\n      audio.pause()\n      setIsPlaying(false)\n      setIsReady(false)\n    }\n  }, [audio])\n\n  const play = () => {\n    audio!.play()\n  }\n\n  const stop = () => {\n    audio!.pause()\n    audio!.currentTime = 0\n  }\n\n  return (\n    <button\n      onClick={isPlaying ? stop : play}\n      className={`button circle-icon ${color || \"is-primary\"} ${\n        !isReady ? \"is-loading\" : \"\"\n      } ${className}`}\n      disabled={!isReady}\n      style={colorAddedStyle}\n      type=\"button\"\n      aria-label={`${name}を${isPlaying ? \"停止\" : \"再生\"}}`}\n    >\n      {isReady ? (\n        <FontAwesomeIcon icon={isPlaying ? faStop : faPlay} />\n      ) : undefined}\n    </button>\n  )\n}\n","import { Link } from \"gatsby\"\nimport React from \"react\"\n\nexport const NemoReadmeModal: React.FC<{\n  isActive: boolean\n  hide: () => void\n}> = props => {\n  return (\n    <div\n      className={\"modal-download modal\" + (props.isActive ? \" is-active\" : \"\")}\n    >\n      <div\n        className=\"modal-background\"\n        onClick={props.hide}\n        role=\"presentation\"\n      />\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head has-text-centered\">\n          <p className=\"modal-card-title\">VOICEVOX Nemo 利用規約</p>\n          <button\n            className=\"delete\"\n            aria-label=\"close\"\n            onClick={props.hide}\n            type=\"button\"\n          ></button>\n        </header>\n\n        <section className=\"modal-card-body\">\n          <p>\n            Nemo の音声ライブラリを用いて生成した音声は、「VOICEVOX\n            Nemo」とクレジットを記載すれば、商用・非商用で利用可能です。\n            <br />\n            <br />\n            利用規約の詳細は以下をご確認ください。\n            <br />\n            <Link to=\"/nemo/term/\">利用規約</Link>\n          </p>\n        </section>\n\n        <footer className=\"modal-card-foot\"></footer>\n      </div>\n    </div>\n  )\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport React, { useContext } from \"react\"\nimport \"../../components/layout.scss\"\nimport { Page } from \"../../components/page\"\nimport Seo from \"../../components/seo\"\n\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\"\nimport {\n  faDownload,\n  faEnvelope,\n  faHome,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { GatsbyImage, IGatsbyImageData, StaticImage } from \"gatsby-plugin-image\"\nimport { NemoReadmeModal } from \"../../components/nemoReadmeModal\"\nimport PlayButton from \"../../components/playButton\"\nimport { GlobalContext } from \"../../contexts/context\"\nimport { useModalController } from \"../../hooks/hook\"\nimport shareThumb from \"../../images/nemo/share-thumbnail.png\"\n\nexport default () => {\n  const query: Queries.NemoQuery = useStaticQuery(graphql`\n    query Nemo {\n      femaleIcons: allFile(filter: { absolutePath: { regex: \"/images\\/nemo\\/nemo_icon_\\\\d+_f/\" } }) {\n        nodes {\n          name\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n      maleIcons: allFile(filter: { absolutePath: { regex: \"/images\\/nemo\\/nemo_icon_\\\\d+_m/\" } }) {\n        nodes {\n          name\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n\n      femaleAudios: allFile(\n        filter: {sourceInstanceName: {eq: \"audio\"}, relativePath: {regex: \"/nemo/nemo_female_.\\\\d+-.+?-\\\\d+/\"}}\n      ) {\n        nodes {\n          name\n          publicURL\n        }\n      }\n      maleAudios: allFile(\n        filter: {sourceInstanceName: {eq: \"audio\"}, relativePath: {regex: \"/nemo/nemo_male_.\\\\d+-.+?-\\\\d+/\"}}\n      ) {\n        nodes {\n          name\n          publicURL\n        }\n      }\n    }\n    `)\n\n  const context = useContext(GlobalContext)\n\n  type SpeakerInfo = {\n    id: string\n    name: string\n    icon: IGatsbyImageData\n    audios: [string, string, string]\n    color: string\n    backgroundColor: string\n    cv: string\n    link: { twitter?: string; homepage?: string; email?: string }\n  }\n\n  // 話者ごとの名前などのメタ情報\n  type SpeakerMetaInfo = {\n    cv: string\n    link: {\n      homepage?: string\n      twitter?: string\n      email?: string\n    }\n  }\n  const speakerMetaInfos: {\n    female: readonly SpeakerMetaInfo[]\n    male: readonly SpeakerMetaInfo[]\n  } = {\n    female: [\n      {\n        cv: \"亜咲比 凛\",\n        link: { homepage: \"https://www.instagram.com/rin_asahi00\" },\n      },\n      {\n        cv: \"透川ナナ\",\n        link: {\n          homepage: \"https://skeb.jp/@kyoso_movie\",\n          twitter: \"https://twitter.com/kyoso_movie\",\n        },\n      },\n      { cv: \"ゆう\", link: { twitter: \"https://twitter.com/yuuyuuasa\" } },\n      { cv: \"ぬっぴぃ\", link: { twitter: \"https://twitter.com/hisano_nuppy\" } },\n      { cv: \"たけだまり\", link: { email: \"mailto:rasenline@yahoo.co.jp\" } },\n      {\n        cv: \"藤田昌代\",\n        link: {\n          homepage: \"http://selfish11.blog54.fc2.com/blog-entry-681.html\",\n        },\n      },\n    ],\n    male: [\n      {\n        cv: \"レナード・ジン\",\n        link: { email: \"mailto:renerdgyink@gmail.com\" },\n      },\n      {\n        cv: \"かちょゴリラ\",\n        link: { twitter: \"https://twitter.com/Kacho_Gorilla\" },\n      },\n      {\n        cv: \"待ち人\",\n        link: { twitter: \"https://twitter.com/mochi_jin_voice\" },\n      },\n    ],\n  } as const\n\n  const getSpeakerInfos = (femaleOrMale: \"female\" | \"male\"): SpeakerInfo[] => {\n    const count = speakerMetaInfos[femaleOrMale].length\n\n    const iconNodes =\n      femaleOrMale == \"female\" ? query.femaleIcons.nodes : query.maleIcons.nodes\n    const icons = iconNodes\n      .slice()\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, count)\n      .map(node => node.childImageSharp!.gatsbyImageData)\n\n    const audioNodes =\n      femaleOrMale == \"female\"\n        ? query.femaleAudios.nodes\n        : query.maleAudios.nodes\n    const audios: [string, string, string][] = [...Array(count).keys()].map(\n      i => {\n        const index = (\"00\" + (i + 1)).slice(-3)\n        const urls = audioNodes\n          .filter(value => value.name.includes(`nemo_${femaleOrMale}_${index}`))\n          .sort((a, b) => a.name.localeCompare(b.name))\n          .map(value => {\n            if (value.publicURL == null)\n              throw new Error(`音声のURLがありません: ${value.name}`)\n            return value.publicURL\n          })\n        if (urls.length != 3)\n          throw new Error(`音声が3つではありません: ${urls}`)\n        return [urls[0], urls[1], urls[2]]\n      }\n    )\n\n    return [...Array(count).keys()].map(\n      i =>\n        ({\n          id: `${femaleOrMale}${i + 1}`,\n          name: (femaleOrMale == \"female\" ? \"女性\" : \"男性\") + `${i + 1}`,\n          icon: icons[i],\n          audios: audios[i],\n          color: femaleOrMale == \"female\" ? \"#f1736fff\" : \"#6fcef1ff\",\n          backgroundColor: \"female\" ? \"#f1736f09\" : \"6fcef109\",\n          ...speakerMetaInfos[femaleOrMale][i],\n        } as const)\n    )\n  }\n\n  // 話者名足したりCV足したりリンク先足したり\n  const speakerInfos = {\n    female: getSpeakerInfos(\"female\"),\n    male: getSpeakerInfos(\"male\"),\n  } as const\n\n  // 女性と男性を並べる\n  const sortedSpeakerInfos = [...speakerInfos.female, ...speakerInfos.male]\n\n  // モーダル\n  const {\n    showing: showingNemoReadmeModal,\n    show: showNemoReadmeModal,\n    hide: hideNemoReadmeModal,\n  } = useModalController()\n\n  // 話者のサンプルボイスなどのコンポーネント\n  const SpeakerComponent = ({\n    info,\n    style,\n  }: { info: SpeakerInfo } & React.HTMLAttributes<HTMLDivElement>) => {\n    return (\n      <div className=\"speaker\" style={style}>\n        <div className=\"speaker-icon-wrapper\">\n          <GatsbyImage image={info.icon} alt={`${info.name}のアイコン`} />\n        </div>\n        <div className=\"speaker-labels\">\n          <span className=\"cv\">CV</span>\n          <div className=\"dropdown is-hoverable\">\n            <div className=\"dropdown-trigger\">\n              <button\n                className=\"button\"\n                aria-haspopup=\"true\"\n                aria-controls={`dropdown-${info.id}`}\n                type=\"button\"\n              >\n                <h3>{info.cv}</h3>\n              </button>\n            </div>\n            <div\n              className=\"dropdown-menu\"\n              id={`dropdown-${info.id}`}\n              role=\"menu\"\n            >\n              <div className=\"dropdown-content\">\n                <div className=\"dropdown-item\">\n                  <span>音声収録のご依頼先</span>\n                  <div className=\"buttons\">\n                    {[\n                      {\n                        link: info.link.homepage,\n                        label: \"ホームページ\",\n                        icon: faHome,\n                      },\n                      {\n                        link: info.link.twitter,\n                        label: \"ツイッター\",\n                        icon: faTwitter,\n                      },\n                      {\n                        link: info.link.email,\n                        label: \"メールアドレス\",\n                        icon: faEnvelope,\n                      },\n                    ].map(\n                      ({ link, label, icon }) =>\n                        link && (\n                          <a\n                            key={label}\n                            className=\"button\"\n                            href={link}\n                            aria-label={`${info.cv}の${label}`}\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                          >\n                            <FontAwesomeIcon icon={icon} />\n                          </a>\n                        )\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"sample-voices\">\n          {info.audios.map((url, index) => (\n            <PlayButton\n              key={index}\n              url={url}\n              name={`${info.name}のサンプルボイス${index + 1}}`}\n              color={info.color}\n              style={{ backgroundColor: info.backgroundColor }}\n            />\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <Page showingHeader={true} isNemo={true}>\n      <Seo\n        title=\"VOICEVOX Nemo\"\n        description=\"プレゼンから動画作成、ナレーションまで様々なTPOに合わせて利用できる、キャラクター無しの無料中品質読み上げソフトウェア\"\n        image={shareThumb}\n      />\n      <main className=\"nemo\">\n        <section className=\"section py-0\">\n          <div className=\"top container is-max-widescreen\">\n            <div className=\"teaser\">\n              <StaticImage\n                src=\"../../images/nemo/top-teaser.png\"\n                alt=\"VOICEVOX Nemoを利用中のソフトウェアのスクリーンショット\"\n                objectFit=\"contain\"\n                style={{ width: \"auto\", height: \"100%\" }}\n              />\n            </div>\n\n            <div className=\"description\">\n              <h1 className=\"title\">VOICEVOX Nemo</h1>\n              <h2 className=\"title\">\n                あらゆる場面に対応する\n                <br />\n                無料の中品質読み上げソフトウェア\n              </h2>\n              <div className=\"powered-by\">Powered by VOICEVOX</div>\n\n              <div className=\"buttons\">\n                <a\n                  className=\"button is-primary is-rounded\"\n                  onClick={() => {\n                    context.nemoGuidanceModal.show()\n                    context.sendEvent(\"download\", \"nemo\")\n                  }}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  tabIndex={0}\n                >\n                  <span className=\"icon\">\n                    <FontAwesomeIcon icon={faDownload} />\n                  </span>\n                  <span className=\"has-text-weight-semibold\">ダウンロード</span>\n                </a>\n                <button\n                  onClick={showNemoReadmeModal}\n                  className=\"button is-normal is-rounded\"\n                  type=\"button\"\n                >\n                  <span>利用規約</span>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"feature container is-max-widescreen\">\n            <div className=\"feature-cell\">\n              商用利用・非商用利用\n              <br />\n              問わず無料\n            </div>\n            <div className=\"feature-cell\">\n              マルチOSに対応\n              <br />\n              (Win / Mac / Linux)\n            </div>\n            <div className=\"feature-cell\">\n              簡単に使える\n              <br />\n              わかりやすい操作画面\n            </div>\n            <div className=\"feature-cell\">\n              イントネーションの\n              <br />\n              詳細な調整も可能\n            </div>\n          </div>\n\n          <div className=\"explain container is-max-desktop\">\n            プレゼンから動画作成ナレーションまで\n            <br />\n            様々なTPOに合わせて利用できる\n            <br />\n            キャラクターなしの読み上げソフトウェア\n          </div>\n        </section>\n\n        <section className=\"section py-0\">\n          <div className=\"speakers-container container is-max-desktop\">\n            {\n              // 内部で表示するドロップメニューが兄弟要素で隠れてしまうのでz-indexを指定している\n              sortedSpeakerInfos.map((info, i) => (\n                <SpeakerComponent\n                  key={i}\n                  info={info}\n                  style={{ zIndex: sortedSpeakerInfos.length - i }}\n                />\n              ))\n            }\n          </div>\n          <div className=\"speaker-contact-explain container is-max-desktop\">\n            より柔軟な演技や高品質な音声をお求めの場合は、\n            <br />\n            上記のリンク先にてご本人へご依頼いただけます。\n          </div>\n        </section>\n\n        {/* コアライブラリ\nVOICEVOXの音声合成をアプリケーションやサービスに組み込める、VOICEVOXのコアライブラリを配布しています。\n\n詳しくは VOICEVOX CORE をご参照ください。 */}\n      </main>\n      <NemoReadmeModal\n        isActive={showingNemoReadmeModal}\n        hide={hideNemoReadmeModal}\n      />\n    </Page>\n  )\n}\n","export default __webpack_public_path__ + \"static/share-thumbnail-8b240d256130bb6b6523ead6a2626d7c.png\";"],"names":["_ref","url","color","className","name","style","audio","setAudio","useState","isPlaying","setIsPlaying","isReady","setIsReady","useEffect","Audio","colorAddedStyle","useMemo","backgroundColor","borderColor","load","onPlayCallback","onPauseCallback","onReady","addEventListener","removeEventListener","pause","React","onClick","stop","currentTime","play","disabled","type","FontAwesomeIcon","icon","faStop","faPlay","undefined","NemoReadmeModal","props","isActive","hide","role","Link","to","query","useStaticQuery","context","useContext","GlobalContext","speakerMetaInfos","female","cv","link","homepage","twitter","email","male","getSpeakerInfos","femaleOrMale","count","length","icons","femaleIcons","nodes","maleIcons","slice","sort","a","b","localeCompare","map","node","childImageSharp","gatsbyImageData","audioNodes","femaleAudios","maleAudios","audios","_toConsumableArray","Array","keys","i","index","urls","filter","value","includes","publicURL","Error","id","speakerInfos","sortedSpeakerInfos","concat","showing","showingNemoReadmeModal","show","showNemoReadmeModal","hideNemoReadmeModal","useModalController","SpeakerComponent","info","GatsbyImage","image","alt","label","faHome","faTwitter","faEnvelope","_ref2","key","href","target","rel","PlayButton","Page","showingHeader","isNemo","Seo","title","description","shareThumb","StaticImage","src","objectFit","width","height","__imageData","require","nemoGuidanceModal","sendEvent","tabIndex","faDownload","zIndex"],"sourceRoot":""}