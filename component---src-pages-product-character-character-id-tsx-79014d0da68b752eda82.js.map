{"version":3,"file":"component---src-pages-product-character-character-id-tsx-79014d0da68b752eda82.js","mappings":"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","sources":["webpack://voicevox-blog/./src/pages/product/{Character.characterId}.tsx"],"sourcesContent":["import {\n  faCircleLeft,\n  faCircleRight,\n  faDownload,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Link, PageProps, graphql, useStaticQuery } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\"\nimport ModalReadmeLibrary from \"../../components/modalReadmeLibrary\"\nimport { Page } from \"../../components/page\"\nimport PlayButton from \"../../components/playButton\"\nimport Seo from \"../../components/seo\"\nimport SoftwareFeature from \"../../components/softwareFeature\"\nimport StyleDropdown, {\n  useStyleDropdownController,\n} from \"../../components/styleDropdown\"\nimport { CharacterContext, GlobalContext } from \"../../contexts/context\"\nimport { useDetailedCharacterInfo } from \"../../hooks/useDetailedCharacterInfo\"\nimport { CharacterKey } from \"../../types/dormitoryCharacter\"\n\nconst ProductPage = ({ params }: PageProps) => {\n  const query = useStaticQuery<Queries.ProductQuery>(graphql`\n    query Product {\n      thumbImage: allFile(\n        filter: { relativePath: { regex: \"/^product/thumb-.*/\" } }\n      ) {\n        nodes {\n          name\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n      featureImage: allFile(\n        filter: { relativePath: { regex: \"/product-feature/\" } }\n      ) {\n        nodes {\n          name\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n  `)\n\n  const context = useContext(GlobalContext)\n  const { characterInfos } = useDetailedCharacterInfo()\n\n  const [characterId, setCharacterId] = useState<string>(params.characterId) // FIXME: キャラクターID型を作る\n\n  const characterInfoEntry = useMemo(\n    () =>\n      Object.entries(characterInfos).find(\n        ([, characterInfo]) => characterInfo?.id === characterId\n      ),\n    [characterInfos, characterId]\n  )\n  const characterKey = useMemo(\n    () => characterInfoEntry![0] as CharacterKey,\n    [characterInfoEntry]\n  )\n  const characterInfo = useMemo(\n    () => characterInfos[characterKey]!,\n    [characterInfos, characterKey]\n  )\n\n  const voiceFeature = characterInfo.voiceFeature\n    ? characterInfo.voiceFeature\n    : \"声\"\n  const description =\n    `VOICEVOXは「${characterInfo.name}」の${voiceFeature}で誰でも簡単に音声を作成できる、無料のテキスト読み上げソフトウェアです。` +\n    (characterInfo.releaseDate\n      ? `${characterInfo.releaseDate}にリリース予定。`\n      : \"\")\n\n  const [\n    showingLibraryReadmeModalCharacterKey,\n    setShowingLibraryReadmeModalCharacterKey,\n  ] = useState<CharacterKey | undefined>(undefined)\n\n  useEffect(() => {\n    document.documentElement.style.setProperty(\n      \"--character-background-color\",\n      characterInfo.lightColor\n    )\n  }, [characterInfo])\n\n  // サンプルボイスのスタイル選択\n  const styles = useMemo(\n    () => characterInfo.styleVoiceUrls.map(o => o.style),\n    [characterInfo]\n  )\n  const { selectedStyle, setSelectedStyle } = useStyleDropdownController({\n    styles,\n  })\n  const selectedAudioUrls = useMemo(\n    () =>\n      styles.length > 0\n        ? (\n            characterInfo.styleVoiceUrls.find(\n              ({ style }) => style == selectedStyle\n            ) || characterInfo.styleVoiceUrls[0]\n          ).urls // FIXME: ブラウザバックで変なステートになるのでフォールバックしている\n        : undefined,\n    [characterInfo, selectedStyle]\n  )\n\n  // キャラクター変更アニメーション\n  type CharaAnimeObject = {\n    characterKey: CharacterKey\n    ref: React.MutableRefObject<HTMLDivElement | null>\n    state: \"entering\" | \"staying\" | \"leaving\"\n    direction: \"left\" | \"right\"\n  }\n  const [nowCharaAnimeObject, setNowCharaAnimeObject] =\n    useState<CharaAnimeObject>({\n      characterKey,\n      ref: React.createRef(),\n      state: \"staying\",\n      direction: \"left\",\n    })\n  const [prevCharaAnimeObject, setPrevCharaAnimeObject] = useState<\n    CharaAnimeObject | undefined\n  >(undefined)\n\n  // キャラクター変更（ページ遷移）\n  const { characterKeys } = useContext(CharacterContext)\n  const prevCharacterKey =\n    characterKeys[\n      (characterKeys.indexOf(characterKey) + characterKeys.length - 1) %\n        characterKeys.length\n    ]\n  const postCharacterKey =\n    characterKeys[\n      (characterKeys.indexOf(characterKey) + 1) % characterKeys.length\n    ]\n  const changeToCharacter = useCallback(\n    (nextCharacterKey: CharacterKey) => {\n      const nextCharacterInfo = characterInfos[nextCharacterKey]!\n      setCharacterId(nextCharacterInfo.id)\n      setSelectedStyle(\n        nextCharacterInfo.styleVoiceUrls.length > 0\n          ? nextCharacterInfo.styleVoiceUrls[0].style\n          : undefined\n      )\n\n      // アニメーション用\n      const diff =\n        characterKeys.indexOf(nextCharacterKey) -\n        characterKeys.indexOf(characterKey)\n      const direction =\n        (diff + characterKeys.length) % characterKeys.length <=\n        characterKeys.length / 2\n          ? \"right\"\n          : \"left\"\n      setPrevCharaAnimeObject({\n        ...nowCharaAnimeObject,\n        state: \"leaving\",\n        direction,\n      })\n      setNowCharaAnimeObject({\n        characterKey: nextCharacterKey,\n        ref: React.createRef(),\n        state: \"entering\",\n        direction,\n      })\n\n      window.history.pushState(\n        { characterKey: nextCharacterKey },\n        \"\",\n        `/product/${nextCharacterInfo.id}/`\n      )\n      // // FIXME: たぶん本来は↓のgatsby.navigateを使うのが正しいけど、フラッシュするので使用できない\n      // navigate(`/product/${characterInfos[nextCharacterKey]!.id}/`, {\n      //   state: { characterKey: nextCharacterKey },\n      // })\n    },\n    [characterInfos]\n  )\n\n  // ブラウザバックを無効化し、コード側でキャラクター変更する\n  // TODO: なぜかうまくいかない。勝手にリロードされて404になってしまう？\n  useEffect(() => {\n    const handlePopState = (event: PopStateEvent) => {\n      if (\n        event.state?.characterKey != undefined &&\n        event.state?.characterKey != characterKey\n      ) {\n        setCharacterId(characterInfos[event.state.characterKey]!.id)\n      }\n    }\n    window.addEventListener(\"popstate\", handlePopState)\n    return () => {\n      window.removeEventListener(\"popstate\", handlePopState)\n    }\n  }, [characterKey])\n\n  // 最初に来たときはそのキャラクターをセット\n  useEffect(() => {\n    history.replaceState({ characterKey }, \"\")\n  }, [])\n\n  // 画像\n  const thumbImage = query.thumbImage.nodes.find(\n    node => node.name === `thumb-${characterId}`\n  )?.childImageSharp?.gatsbyImageData\n  if (thumbImage == undefined)\n    throw new Error(`thumb-${characterId} is not found`)\n\n  if (query.featureImage.nodes.length != 1)\n    throw new Error(\"featureImage is not found\")\n  const featureImage =\n    query.featureImage.nodes[0].childImageSharp!.gatsbyImageData\n\n  return (\n    <Page>\n      <Seo\n        title={`VOICEVOX ${characterInfo.name} | 無料のテキスト読み上げソフトウェア`}\n        description={description}\n        image={thumbImage.images.fallback?.src}\n      />\n      <main className=\"product\">\n        <div className=\"section py-0\">\n          <div className=\"top container\">\n            <button\n              className=\"button prev circle-icon\"\n              onClick={() => changeToCharacter(prevCharacterKey)}\n              aria-label=\"前のキャラクターを表示\"\n            >\n              <FontAwesomeIcon icon={faCircleLeft} />\n            </button>\n            <button\n              className=\"button post circle-icon\"\n              onClick={() => changeToCharacter(postCharacterKey)}\n              aria-label=\"次のキャラクターを表示\"\n            >\n              <FontAwesomeIcon icon={faCircleRight} />\n            </button>\n            <div className=\"top-character\">\n              {[prevCharaAnimeObject, nowCharaAnimeObject].map(\n                obj =>\n                  obj && (\n                    <div\n                      key={obj.characterKey}\n                      ref={obj.ref}\n                      className={`image-wrapper ${\n                        obj.state != \"staying\" &&\n                        `${obj.state}-${obj.direction}`\n                      }`}\n                    >\n                      <GatsbyImage\n                        image={characterInfos[obj.characterKey]!.portraitImage}\n                        alt={characterInfos[obj.characterKey]!.name}\n                      />\n                    </div>\n                  )\n              )}\n              <div className=\"info pb-5\">\n                <div className=\"detail p-4\">\n                  <p>{characterInfo.description.replaceAll(\"<br />\", \"\")}</p>\n                  <Link\n                    to={`/dormitory/${characterId}/`}\n                    className=\"has-text-weight-bold has-text-black\"\n                  >\n                    キャラクター詳細　→\n                  </Link>\n                </div>\n\n                {/* サンプルボイス */}\n                {styles.length > 0 &&\n                  selectedAudioUrls != undefined &&\n                  selectedStyle != undefined && (\n                    <div className=\"sample p-4\">\n                      <h3 className=\"is-size-6\">サンプルボイス</h3>\n                      <div className=\"is-flex is-flex-direction-row mt-2\">\n                        {selectedAudioUrls.map((url, index) => (\n                          <PlayButton\n                            key={index}\n                            url={url}\n                            name={`${characterInfo.name}のサンプルボイス${\n                              index + 1\n                            }}`}\n                            color={characterInfo.color}\n                            className=\"ml-1 mr-1\"\n                          />\n                        ))}\n                      </div>\n                      {styles.length > 1 && (\n                        <StyleDropdown\n                          styles={styles}\n                          selectedStyle={selectedStyle}\n                          setSelectedStyle={setSelectedStyle}\n                          characterName={characterInfo.name}\n                          className=\"is-up mt-2\"\n                        />\n                      )}\n                    </div>\n                  )}\n              </div>\n            </div>\n            <div className=\"description\">\n              <h1 className=\"title\">VOICEVOX {characterInfo.name}</h1>\n              <p className=\"is-size-5\">{description}</p>\n              {characterInfo.releaseDate == undefined && (\n                <a\n                  className=\"button mt-5 is-primary is-rounded is-large\"\n                  onClick={() => {\n                    context.downloadModal.show()\n                    context.sendEvent(\"download\", \"software\")\n                  }}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  tabIndex={0}\n                >\n                  <span className=\"icon\">\n                    <FontAwesomeIcon icon={faDownload} />\n                  </span>\n                  <span className=\"has-text-weight-semibold\">\n                    <span className=\"is-hidden-mobile\">VOICEVOX を </span>\n                    ダウンロード\n                  </span>\n                </a>\n              )}\n              <div className=\"terms mt-5\">\n                <Link to=\"/term/\" className=\"button is-normal is-rounded\">\n                  <span>VOICEVOX 利用規約</span>\n                </Link>\n                {characterInfo.policyUrl && (\n                  <button\n                    onClick={() =>\n                      setShowingLibraryReadmeModalCharacterKey(characterKey)\n                    }\n                    className=\"button is-normal is-rounded\"\n                    type=\"button\"\n                  >\n                    <span>{characterInfo.name} 利用規約</span>\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <section className=\"section\">\n          <div\n            className=\"feature section\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <div className=\"separator\">\n              <h2 className=\"separator-text title is-size-2 has-text-weight-bold px-5\">\n                VOICEVOX\n              </h2>\n            </div>\n            <h3 className=\"separator-text is-size-5 has-text-weight-bold mt-5\">\n              無料で使える中品質なテキスト読み上げソフトウェア\n            </h3>\n\n            <div className=\"feature-content\">\n              <GatsbyImage\n                image={featureImage}\n                alt=\"VOICEVOXのソフトウェアの画面のスクリーンショット画像\"\n                objectFit=\"contain\"\n                className=\"thumb\"\n              />\n              <div className=\"description\">\n                <SoftwareFeature />\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n      <ModalReadmeLibrary\n        hide={() => setShowingLibraryReadmeModalCharacterKey(undefined)}\n        {...(showingLibraryReadmeModalCharacterKey != undefined\n          ? {\n              isActive: true,\n              characterKey: showingLibraryReadmeModalCharacterKey,\n            }\n          : {\n              isActive: false,\n              characterKey: undefined,\n            })}\n      />\n    </Page>\n  )\n}\n\nexport default ProductPage\n"],"names":["_ref","_query$thumbImage$nod","_query$thumbImage$nod2","_thumbImage$images$fa","params","query","useStaticQuery","context","useContext","GlobalContext","characterInfos","useDetailedCharacterInfo","characterId","setCharacterId","useState","characterInfoEntry","useMemo","Object","entries","find","_ref2","characterInfo","id","characterKey","voiceFeature","description","name","releaseDate","showingLibraryReadmeModalCharacterKey","setShowingLibraryReadmeModalCharacterKey","undefined","useEffect","document","documentElement","style","setProperty","lightColor","styles","styleVoiceUrls","map","o","selectedStyle","setSelectedStyle","useStyleDropdownController","selectedAudioUrls","length","_ref3","urls","nowCharaAnimeObject","setNowCharaAnimeObject","ref","React","state","direction","prevCharaAnimeObject","setPrevCharaAnimeObject","characterKeys","CharacterContext","prevCharacterKey","indexOf","postCharacterKey","changeToCharacter","useCallback","nextCharacterKey","nextCharacterInfo","window","history","pushState","handlePopState","event","_event$state","_event$state2","addEventListener","removeEventListener","replaceState","thumbImage","nodes","node","childImageSharp","gatsbyImageData","Error","featureImage","Page","Seo","title","image","images","fallback","src","className","onClick","FontAwesomeIcon","icon","faCircleLeft","faCircleRight","obj","key","GatsbyImage","portraitImage","alt","replaceAll","Link","to","url","index","PlayButton","color","StyleDropdown","characterName","downloadModal","show","sendEvent","target","rel","tabIndex","faDownload","policyUrl","type","display","flexDirection","alignItems","objectFit","SoftwareFeature","ModalReadmeLibrary","assign","hide","isActive"],"sourceRoot":""}